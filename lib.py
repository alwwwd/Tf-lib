import asyncio, requests
from json_print import json_print 
version = "2.0 BUILD"
print(f"TF_lib\n–≤–µ—Ä—Å–∏—è: {version}\n–ù–∞—á–∏–Ω–∞—é —Ä–∞–±–æ—Ç—É!")

async def update_status(mes,code_and_status):
    while True:
        for key in code_and_status.keys():
                status = 0
                code = code_and_status[key]["code"]
                await asyncio.sleep(0.1)
                response = requests.get(f"https://testflight.apple.com/join/{code}",headers={"accept-language":"en-GB,en;q=0.9"})
                html = response.text
                # –ü–æ–ª—É—á–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∞—Ç—Ä–∏–±—É—Ç–∞ conten
                appname = code_and_status[key]["name"]
                # and "–í –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —ç—Ç–æ–π –±–µ—Ç–∞-–≤–µ—Ä—Å–∏–µ–π –Ω–æ–≤—ã–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫–∏ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è." not in html "–®—Ç–∞—Ç" not in html and
                if "full" not in html and "close" not in html :
                    status = 1
                    if status == 1:
                        if status != code_and_status[key]["status"]:
                            code_and_status[key]["status"] = status 
                            await asyncio.sleep(0)
                            await mes.answer(f"üá∑üá∫https://testflight.apple.com/join/{code} {appname} –æ—Ç–∫—Ä—ã—Ç!\n\n\nüá¨üáßhttps://testflight.apple.com/join/{code} {appname} is open!")
                            await asyncio.sleep(0.1)
                else:
                    status = 2
                    await asyncio.sleep(0.1)
                    code_and_status[key]["status"] = 2
                    await asyncio.sleep(0.1)